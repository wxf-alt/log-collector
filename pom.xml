<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>log-collector</artifactId>
    <version>1.0-SNAPSHOT</version>

    <!--版本号统一-->
    <properties>
        <slf4j.version>1.7.20</slf4j.version>
        <logback.version>1.0.7</logback.version>
    </properties>

    <dependencies>
        <!--    解析 Json的框架  Gson    JackSon    FastJson    -->
        <!--    阿里巴巴开源json解析框架  -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.51</version>
        </dependency>

        <!--    日志记录框架      -->
        <!--        log4j log4j2 logback
                logback 是 log4j的升级版，速度更快，性能更高，测试更充分！
                logback 提供了SLF4J的支持，可以从log4j 无缝切换到logback
            区别：
                log4j使用的 log4j.properties 作为配置文件
                logback使用 logback.xml 作为配置文件
             使用： 在配置文件中，可以定义三种组件
                Logger：日志的记录器，可以在Logger上定义日志的记录级别(INFO,WARN)
                Appender：负责将输出的信息，追加到目的地(文件，控制台，网络端口，数据库)
                Layout：输出的样式，每条信息都会格式化为指定的样式输出  -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
    </dependencies>

    <!--    打包框架    -->
    <!--    注意：com.atguigu.appclient.AppMain要和自己建的全类名一致。-->
    <!--    编译打包插件  -->
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <!--      在mvn;package阶段使用      -->
            <!--    maven-assembly-plugin 可以将当前项目依赖的Jar中字节码y也打包
                    默认打包 maven-jar-plugin 只会将你自己写的带啊打包; 默认仓库中已经安装了所需的依赖
            -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>com.atguigu.appclient.AppMain</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>